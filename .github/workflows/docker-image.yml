name: E-commerce CI/CD

on:
  push:
    branches: [main, dev]
  pull_request:

env:
  REGISTRY: docker.io
  IMAGE_NAME: thuanntv/e-commerce-website
  DB_NAME: ecommerce_test
  DB_USER: root
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_NAME }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            mysqladmin ping -h 127.0.0.1 -u root --password="${{ env.DB_PASSWORD }}" && break
            sleep 5
          done

      - name: Create database
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
        run: |
          npx sequelize-cli db:create --env test

      - name: Run migrations
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          NODE_ENV: test
        run: |
          npx sequelize-cli db:migrate

      - name: Run seeders (conditional)
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          NODE_ENV: test
        run: |
          if [ -d "src/seeders" ] && [ -n "$(ls -A src/seeders/*.js 2>/dev/null)" ]; then
            npx sequelize-cli db:seed:all
          else
            echo "No seeders found, skipping..."
          fi

      - name: Run tests
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          NODE_ENV: test
        run: npm test

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Security scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          severity: 'HIGH,CRITICAL'
          exit-code: '1'

      - name: Push to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
